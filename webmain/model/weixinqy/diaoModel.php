<?php
/**
*	来自：信呼开发团队
*	作者：磐石(rainrock)
*	网址：http://www.rockoa.com/
*	系统文件
*/
include_once ''.ROOT_PATH.'/include/weixin/WXBizMsgCrypt.php'; class weixinqy_diaoClassModel extends weixinqyModel { private $wxcpt = array(); private $xmlstr; public function getxml() { $sReqMsgSig = $sVerifyMsgSig = $this->rock->get('msg_signature'); $sReqTimeStamp = $sVerifyTimeStamp = $this->rock->get('timestamp'); $sReqNonce = $sVerifyNonce = $this->rock->get('nonce'); $sVerifyEchoStr = $this->rock->get('echostr'); $garr = $this->gethuidiao(); $corpid = $garr['corpid']; $Tokenwx = $garr['huitoken']; $encodingAesKey = $garr['aeskey']; $wxcpt = new WXBizMsgCrypt($Tokenwx, $encodingAesKey, $corpid); $this->wxcpt = $wxcpt; if($sVerifyEchoStr){ $sEchoStr = ''; $errCode = $wxcpt->VerifyURL($sVerifyMsgSig, $sVerifyTimeStamp, $sVerifyNonce, $sVerifyEchoStr, $sEchoStr); if ($errCode == 0) { print($sEchoStr); }else{ $this->rock->debugs(''.$errCode.'','wxqychange'); print($errCode . "\n\n"); } exit; } if(!isset($GLOBALS['HTTP_RAW_POST_DATA']))exit('sorry!'); $sReqData = $GLOBALS['HTTP_RAW_POST_DATA']; $sMsg = ''; $errCode = $wxcpt->DecryptMsg($sReqMsgSig, $sReqTimeStamp, $sReqNonce, $sReqData, $sMsg); if($errCode == 0){ $this->xmlstr = $sMsg; $xml = new xmlDecodes($sMsg); return $xml; }else{ return false; } } public function EncryptMsg($sMsg) { $sNonce = $this->rock->get('nonce'); $sTimeStamp = $this->rock->get('timestamp'); $sMsgb = ''; $errCode = $this->wxcpt->EncryptMsg($sMsg, $sTimeStamp, $sNonce, $sMsgb); if($errCode == 0){ return $sMsgb; }else{ return false; } } public function eventoption($xml) { $MsgType = $xml->getval('MsgType'); $Event = $xml->getval('Event'); $AgentID = $xml->getval('AgentID'); $user = $xml->getval('FromUserName'); $urs = m('admin')->getone("`user`='$user'"); $uid = 0; if($urs)$uid = $urs['id']; if($Event=='LOCATION'){ m('location')->insert(array( 'user' => $user, 'uid' => $uid, 'agentid' => $AgentID, 'location_x' => $xml->getval('Latitude'), 'location_y' => $xml->getval('Longitude'), 'precision' => $xml->getval('Precision'), 'type' => 1, 'optdt' => $this->rock->now, )); }else if($Event=='subscribe'){ m('weixinqy:user')->subscribe($user, 1); }else if($Event=='unsubscribe'){ m('weixinqy:user')->subscribe($user, 4); }else if($Event=='change_contact'){ $user = $xml->getval('UserID'); $barr = m('weixinqy:user')->getuserinfo($user); }else{ $this->rock->debugs($this->xmlstr."\n\n".$_SERVER['REQUEST_URI'],$Event); } } } class xmlDecodes { public $xml; public function __construct($sMsg) { $this->xml = new DOMDocument(); $this->xml->loadXML($sMsg); } public function getval($key, $xu=0) { @$val = $this->xml->getElementsByTagName($key)->item($xu)->nodeValue; return $val; } public function getobj($key, $xu=0) { $this->_temparr = array(); $obj = $this->xml->getElementsByTagName($key)->item($xu); $this->getvaluess($obj); return $this->_temparr; } private function getvaluess($Item) { foreach($Item->childNodes as $nodename) { $tag = $nodename->tagName; if($tag=='Receiver' || $tag=='ChatInfo'){ $this->getvaluess($nodename); }else{ $this->_temparr[$tag] = $nodename->nodeValue; } } } }